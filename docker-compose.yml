services:
  postgres:
    image: postgres:15
    restart: always
    volumes:
      - ${HOST_DATA_DIR:?}:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: password
    logging:
      driver: fluentd
      options:
        tag: docker.harmonica_hasura_aoirint_com.postgres.{{.ID}}
        fluentd-async: "true"

  graphql-engine:
    image: hasura/graphql-engine:v2.45.1
    user: hasura
    restart: always
    depends_on:
      - "postgres"
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:password@postgres:5432/postgres
      HASURA_GRAPHQL_ENABLE_CONSOLE: ${HASURA_GRAPHQL_ENABLE_CONSOLE:?}
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET:?}
      # https://hasura.io/docs/latest/graphql/core/auth/authentication/jwt.html
      HASURA_GRAPHQL_JWT_SECRET: ${HASURA_GRAPHQL_JWT_SECRET:?}
    logging:
      driver: fluentd
      options:
        tag: docker.harmonica_hasura_aoirint_com.graphql_engine.{{.ID}}
        fluentd-async: "true"

  nginx:
    image: nginx:latest
    restart: always
    depends_on:
      - graphql-engine
    ports:
      - "${HASURA_PORT:?}:80"
    volumes:
      - ./nginx_templates:/etc/nginx/templates
    environment:
      - NGINX_ENVSUBST_TEMPLATE_SUFFIX=.nginx
    logging:
      driver: fluentd
      options:
        tag: docker.harmonica_hasura_aoirint_com.nginx.{{.ID}}
        fluentd-async: "true"

  cloudflared:
    image: cloudflare/cloudflared:latest
    command: tunnel run
    restart: always
    depends_on:
      - nginx
    environment:
      TUNNEL_TOKEN: ${CLOUDFLARED_TUNNEL_TOKEN:?}
    logging:
      driver: fluentd
      options:
        tag: docker.harmonica_hasura_aoirint_com.cloudflared.{{.ID}}
        fluentd-async: "true"
